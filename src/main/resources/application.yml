spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ajsihdiwq
            client-secret: qwjhqwgeqwhwq
          github:
            client-id: jahuqwheuqwg
            client-secret: ashhdqwdwqkdowjd
          mycustom: # <--- your custom provider ID
            client-id: your-client-id
            client-secret: your-client-secret
            client-authentication-method: client_secret_basic
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid, profile, email
            provider: mycustom     # <--- link to provider definition below
        provider:
          mycustom:
            authorization-uri: https://auth.example.com/oauth2/authorize
            token-uri: https://auth.example.com/oauth2/token
            user-info-uri: https://auth.example.com/oauth2/userinfo
            user-name-attribute: sub   # depends on provider (could be "id", "username", etc.)
            jwk-set-uri: https://auth.example.com/oauth2/jwks  # if OpenID Connect
